install.packages("ggplot2")
install.packages("xlsx")
install.packages("dplyr")
install.packages("tidyr")
install.packages("RODBC")
install.packages(c("RMySQL", "RPostgreSQL", "rpostgis", "RSQLite"))
install.packages("dplyr")
install.packages(c("leaflet", "threejs", "DT", "googleVis", "rgl", "car", "xtable", "shiny", "sp", "maptools", "maps", "ggmap", "jsonlite"))
q()
# ggplot2 comes default
library(ggplot2)
# install RColorBrewer
library(RColorBrewer)
# load economics data
data(diamonds)
# Scatter plot of population versus unemploy
ggplot(data = diamonds, x = carat, y = price, color = cut) + scale_color_brewer(palette = 'Accent')
source('/var/www/example.com/public_html/Data-Science-All/EDA.r')
source('/var/www/example.com/public_html/Data-Science-All/EDA.r')
# ggplot2 comes default
library(ggplot2)
# install RColorBrewer
library(RColorBrewer)
# load economics data
data(diamonds)
# Scatter plot of population versus unemploy
ggplot(data = diamonds)
# ggplot2 comes default
library(ggplot2)
# install RColorBrewer
library(RColorBrewer)
# load economics data
data(diamonds)
# Scatter plot of population versus unemploy
ggplot(data = diamonds)
# Scatter plot of population versus unemploy
ggplot(data = diamonds, x = carat, y = price)
# Scatter plot of population versus unemploy
ggplot(diamonds, x = carat, y = price)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point()
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) + scale_color_brewer(palette = 'Accent')
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price)) + scale_color_brewer(palette = 'Accent')
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = clarity)) + scale_color_brewer(palette = 'Accent')
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = clarity)) + scale_color_brewer(palette = 'Accent')
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = clarity)) + geom_point()
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut())) + geom_point()
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + geom_point()
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = clarity)) + geom_point()
ut
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + geom_point()
View(diamonds)
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) + geom_point()
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + scale_color_brewer(palette = 'Accent')
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + scale_color_brewer()
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + scale_color_brewer(palette = "Accent")
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + scale_color_brewer(palette = "RdY1Gn")
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + scale_colour_brewer(palette = "Accent")
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + scale_colour_brewer(palette = "RdYlGn")
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) + geom_point() + scale_color_brewer(palette = 'Accent')
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) + geom_point() + scale_color_brewer(palette = 'RdY1Gn')
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
palette = 'RdYlGn'
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
data("economics")
View(economics)
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = pce, y = pop, color = uempmed)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(economics, aes(x = pce, y = pop, color = uempmed)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(economics, aes(x = pce, y = pop)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(economics, aes(x = pce, y = pop, color = data)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(economics, aes(x = pce, y = pop, color = data)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
View(presidential)
data("midwest")
View(midwest)
# Scatter plot of population versus unemploy
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = category)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(midwest, aes(x = poppovertyknown, y = poptotal, color = category)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point() + scale_color_brewer(palette = 'Accent')
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=4) + scale_color_brewer(palette = 'Accent')
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=4) + scale_color_brewer(palette = 'Accent',breaks = 1:2)
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=4) + scale_color_brewer(palette = 'Accent',breaks = 1:5)
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=4) + scale_color_brewer(palette = 'Accent',breaks = 5:10)
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=4) + scale_color_brewer(palette = 'Accent')
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=2) + scale_color_brewer(palette = 'Accent')
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=5) + scale_color_brewer(palette = 'Accent')
load("//var/www/example.com/public_html/Data-Science-All/workspace.RData")
setwd("/var/www/example.com/public_html/Data-Science-All")
load("//var/www/example.com/public_html/Data-Science-All/workspace.RData")
# ggplot2 comes default
library(ggplot2)
# install RColorBrewer
library(RColorBrewer)
summary(diamonds)
View(diamonds)
View(diamonds)
ordered(diamonds)
factor(diamonds)
max(diamonds$carat)
which <- factor(diamonds, ordered = TRUE)
which <- factor(x = diamonds, ordered = TRUE)
dim(diamonds)
str(diamonds)
str(diamonds$color)
# QUIZ 2
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 100,
color = "white", fill = "lightgreen") +
ggtitle("Diamonds Price Plot")
# QUIZ 2
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 100,
color = "white", fill = "green") +
ggtitle("Diamonds Price Plot")
# QUIZ 2
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 100,
color = "white", fill = "green",
xlab("Price")) +
ggtitle("Diamonds Price Plot")
# QUIZ 2
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 100,
color = "white", fill = "green",
xlab = "Price") +
ggtitle("Diamonds Price Plot")
setwd("/var/www/example.com/public_html/Data-Science-All")
ggtitle("Diamonds Price Plot")
# QUIZ 2
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 100,
color = "white", fill = "green") +
xlab("Price")+
ylab("Diamonds Count") +
ggtitle("Diamonds Price Plot")
View(diamonds)
# QUIZ 2
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 100,
color = "white", fill = "red") +
xlab("Price")+
ylab("Diamonds Count") +
ggtitle("Diamonds Price Plot")
# QUIZ 2
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 100,
color = "", fill = "red") +
xlab("Price")+
ylab("Diamonds Count") +
ggtitle("Diamonds Price Plot")
# QUIZ 2
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 100,
, fill = "red") +
xlab("Price")+
ylab("Diamonds Count") +
ggtitle("Diamonds Price Plot")
# QUIZ 2
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 100,
color = "red", fill = "red") +
xlab("Price")+
ylab("Diamonds Count") +
ggtitle("Diamonds Price Plot")
# QUIZ 2
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 100,
color = "lightred", fill = "red") +
xlab("Price")+
ylab("Diamonds Count") +
ggtitle("Diamonds Price Plot")
# QUIZ 2
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 100,
color = "coral", fill = "red") +
xlab("Price")+
ylab("Diamonds Count") +
ggtitle("Diamonds Price Plot")
summary(diamonds$price)
# QUIZ 4
nrow(diamonds$price < 500)
# QUIZ 4
nrow(subset(diamonds, price < 500))
nrow(subset(diamonds, price < 250))
nrow(subset(diamonds, price < 15000 | price == 15000))
nrow(subset(diamonds, price < 250))
nrow(subset(diamonds, price < 15000 | price == 15000))
nrow(subset(diamonds, price <= 15000))
# QUIZ 4
nrow(subset(diamonds, price < 500)) # numberof diamonds < $500
nrow(subset(diamonds, price < 250))
# QUIZ 4
nrow(subset(diamonds, price < 500)) # numberof diamonds < $500
nrow(subset(diamonds, price < 250))
nrow(subset(diamonds, price <= 15000 | price == 15000))
nrow(subset(diamonds, price < 15000 | price == 15000))
nrow(subset(diamonds, price > 15000 | price == 15000))
# QUIZ 5
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 10, color = "coral",
fill = "red") +
xlab("Price")+
ylab("Diamonds Count") +
ggtitle("Diamonds Price Histogram between $0 and $1500.") +
coord_cartesian(xlim=c(0,1500))
# QUIZ 5
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 20, color = "coral",
fill = "red") +
xlab("Price")+
ylab("Diamonds Count") +
ggtitle("Diamonds Price Histogram between $0 and $1500.") +
coord_cartesian(xlim=c(0,1500))
# QUIZ 5
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 10, color = "coral",
fill = "red") +
xlab("Price")+
ylab("Diamonds Count") +
ggtitle("Diamonds Price Histogram between $0 and $1500.") +
coord_cartesian(xlim=c(0,1500))
# QUIZ 5
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 5, color = "coral",
fill = "red") +
xlab("Price")+
ylab("Diamonds Count") +
ggtitle("Diamonds Price Histogram between $0 and $1500.") +
coord_cartesian(xlim=c(0,1500))
# QUIZ 5
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 30, color = "coral",
fill = "red") +
xlab("Price")+
ylab("Diamonds Count") +
ggtitle("Diamonds Price Histogram between $0 and $1500.") +
coord_cartesian(xlim=c(0,1500))
# QUIZ 5
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 15, color = "coral",
fill = "red") +
xlab("Price")+
ylab("Diamonds Count") +
ggtitle("Diamonds Price Histogram between $0 and $1500.") +
coord_cartesian(xlim=c(0,1500))
setwd("/var/www/example.com/public_html/Data-Science-All")
load("//var/www/example.com/public_html/Data-Science-All/workspace.RData")
# QUIZ 5
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 15, color = "coral",
fill = "red") +
xlab("Price")+
ylab("Diamonds Count") +
ggtitle("Diamonds Price Histogram between $0 and $1500.") +
coord_cartesian(xlim=c(0,1500))
# QUIZ 5
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 15, color = "coral",
fill = "red") +
ggtitle("Diamonds Price Histogram between $0 and $1500.") +
coord_cartesian(xlim=c(0,1500))
# QUIZ 5
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 15, color = "coral",
fill = "red") +
xlab("Price")+
ylab("Diamonds Count") +
ggtitle("Diamonds Price Histogram between $0 and $1500.") +
coord_cartesian(xlim=c(0,1500))
# QUIZ 5
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 15, color = "coral",
fill = "red") +
xlab("Price")+
ylab("Diamonds Count") +
ggtitle("Diamonds Price Histogram between $0 and $1500.") +
coord_cartesian(xlim=c(0,1500)) +
ggsave("priceHistogram.png")
# QUIZ 5
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 15, color = "coral",
fill = "red") +
xlab("Price")+
ylab("Diamonds Count") +
ggtitle("Diamonds Price Histogram between $0 and $1500.") +
coord_cartesian(xlim=c(0,1500)) +
ggsave("plots/priceHistogram.png")
# QUIZ 5
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 15, color = "coral",
fill = "red") +
xlab("Price")+
ylab("Diamonds Count") +
ggtitle("Diamonds Price Histogram between $0 and $1500.") +
ggsave("plots/priceHistogram.png")
summary(diamonds$price)
# QUIZ 5
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 15, color = "coral",
fill = "red") +
xlab("Price")+
ylab("Diamonds Count") +
ggtitle("Diamonds Price Histogram between $0 and $2000.") +
coord_cartesian(xlim=c(0,2000)) +
ggsave("plots/priceHistogram.png")
# QUIZ 5
ggplot(diamonds) +
geom_histogram(aes(x=price), binwidth = 15, color = "coral",
fill = "red") +
xlab("Price")+
ylab("Diamonds Count") +
ggtitle("Diamonds Price Histogram between $0 and $1000.") +
coord_cartesian(xlim=c(0,1000)) +
ggsave("plots/priceHistogram.png")
