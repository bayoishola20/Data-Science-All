install.packages("ggplot2")
install.packages("xlsx")
install.packages("dplyr")
install.packages("tidyr")
install.packages("RODBC")
install.packages(c("RMySQL", "RPostgreSQL", "rpostgis", "RSQLite"))
install.packages("dplyr")
install.packages(c("leaflet", "threejs", "DT", "googleVis", "rgl", "car", "xtable", "shiny", "sp", "maptools", "maps", "ggmap", "jsonlite"))
q()
# ggplot2 comes default
library(ggplot2)
# install RColorBrewer
library(RColorBrewer)
# load economics data
data(diamonds)
# Scatter plot of population versus unemploy
ggplot(data = diamonds, x = carat, y = price, color = cut) + scale_color_brewer(palette = 'Accent')
source('/var/www/example.com/public_html/Data-Science-All/EDA.r')
source('/var/www/example.com/public_html/Data-Science-All/EDA.r')
# ggplot2 comes default
library(ggplot2)
# install RColorBrewer
library(RColorBrewer)
# load economics data
data(diamonds)
# Scatter plot of population versus unemploy
ggplot(data = diamonds)
# ggplot2 comes default
library(ggplot2)
# install RColorBrewer
library(RColorBrewer)
# load economics data
data(diamonds)
# Scatter plot of population versus unemploy
ggplot(data = diamonds)
# Scatter plot of population versus unemploy
ggplot(data = diamonds, x = carat, y = price)
# Scatter plot of population versus unemploy
ggplot(diamonds, x = carat, y = price)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point()
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) + scale_color_brewer(palette = 'Accent')
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price)) + scale_color_brewer(palette = 'Accent')
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = clarity)) + scale_color_brewer(palette = 'Accent')
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = clarity)) + scale_color_brewer(palette = 'Accent')
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = clarity)) + geom_point()
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut())) + geom_point()
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + geom_point()
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = clarity)) + geom_point()
ut
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + geom_point()
View(diamonds)
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) + geom_point()
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + scale_color_brewer(palette = 'Accent')
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + scale_color_brewer()
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + scale_color_brewer(palette = "Accent")
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + scale_color_brewer(palette = "RdY1Gn")
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + scale_colour_brewer(palette = "Accent")
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + scale_colour_brewer(palette = "RdYlGn")
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) + geom_point() + scale_color_brewer(palette = 'Accent')
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) + geom_point() + scale_color_brewer(palette = 'RdY1Gn')
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
palette = 'RdYlGn'
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
data("economics")
View(economics)
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = pce, y = pop, color = uempmed)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(economics, aes(x = pce, y = pop, color = uempmed)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(economics, aes(x = pce, y = pop)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(economics, aes(x = pce, y = pop, color = data)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(economics, aes(x = pce, y = pop, color = data)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
View(presidential)
data("midwest")
View(midwest)
# Scatter plot of population versus unemploy
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = category)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(midwest, aes(x = poppovertyknown, y = poptotal, color = category)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point() + scale_color_brewer(palette = 'Accent')
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=4) + scale_color_brewer(palette = 'Accent')
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=4) + scale_color_brewer(palette = 'Accent',breaks = 1:2)
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=4) + scale_color_brewer(palette = 'Accent',breaks = 1:5)
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=4) + scale_color_brewer(palette = 'Accent',breaks = 5:10)
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=4) + scale_color_brewer(palette = 'Accent')
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=2) + scale_color_brewer(palette = 'Accent')
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=5) + scale_color_brewer(palette = 'Accent')
load("//var/www/example.com/public_html/Data-Science-All/workspace.RData")
setwd("/var/www/example.com/public_html/Data-Science-All")
load("//var/www/example.com/public_html/Data-Science-All/workspace.RData")
save.image("/var/www/example.com/public_html/Data-Science-All/workspace.RData")
library(leaflet)
leaflet() %>%
addTiles()
library(leaflet)
leaflet() %>%
# addTiles()
addProviderTiles("OpenstreetMap.BlackAndWhite")
library(leaflet)
leaflet() %>%
# addTiles()
addProviderTiles("OpenStreetMap.BlackAndWhite")
?reserved
?leaflet
?tidyverse
install.packages(tidyverse)
tidyverse
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
?tidyverse
library(leaflet)
leaflet() %>%
# addTiles()
addProviderTiles("OpenStreetMap.BlackAndWhite")
# Print the providers list included in the leaflet library
providers
# Print only the names of the map tiles in the providers list
names(providers)
# Use str_detect() to determine if the name of each provider tile contains the string "CartoDB"
str_detect(names(providers), "CartoDB")
# Use str_detect() to print only the provider tile names that include the string "CartoDB"
names(providers)[str_detect(names(providers), "CartoDB")]
# Print the providers list included in the leaflet library
providers
intera_map.r
library(leaflet)
# leaflet() %>%
#   # addTiles()
#   addProviderTiles("OpenStreetMap.BlackAndWhite")
# Print the providers list included in the leaflet library
providers
# Print only the names of the map tiles in the providers list
names(providers)
# Use str_detect() to determine if the name of each provider tile contains the string "CartoDB"
str_detect(names(providers), "CartoDB")
# Use str_detect() to print only the provider tile names that include the string "CartoDB"
names(providers)[str_detect(names(providers), "CartoDB")]
library(leaflet)
library(tidyr)
# leaflet() %>%
#   # addTiles()
#   addProviderTiles("OpenStreetMap.BlackAndWhite")
# Print the providers list included in the leaflet library
providers
# Print only the names of the map tiles in the providers list
names(providers)
# Use str_detect() to determine if the name of each provider tile contains the string "CartoDB"
str_detect(names(providers), "CartoDB")
# Use str_detect() to print only the provider tile names that include the string "CartoDB"
names(providers)[str_detect(names(providers), "CartoDB")]
install.packages("tidyverse")
library(leaflet)
library(tidyr)
# leaflet() %>%
#   # addTiles()
#   addProviderTiles("OpenStreetMap.BlackAndWhite")
# Print the providers list included in the leaflet library
providers
# Print only the names of the map tiles in the providers list
names(providers)
# Use str_detect() to determine if the name of each provider tile contains the string "CartoDB"
str_detect(names(providers), "CartoDB")
# Use str_detect() to print only the provider tile names that include the string "CartoDB"
names(providers)[str_detect(names(providers), "CartoDB")]
