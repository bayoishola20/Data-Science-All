install.packages("ggplot2")
install.packages("xlsx")
install.packages("dplyr")
install.packages("tidyr")
install.packages("RODBC")
install.packages(c("RMySQL", "RPostgreSQL", "rpostgis", "RSQLite"))
install.packages("dplyr")
install.packages(c("leaflet", "threejs", "DT", "googleVis", "rgl", "car", "xtable", "shiny", "sp", "maptools", "maps", "ggmap", "jsonlite"))
q()
# ggplot2 comes default
library(ggplot2)
# install RColorBrewer
library(RColorBrewer)
# load economics data
data(diamonds)
# Scatter plot of population versus unemploy
ggplot(data = diamonds, x = carat, y = price, color = cut) + scale_color_brewer(palette = 'Accent')
source('/var/www/example.com/public_html/Data-Science-All/EDA.r')
source('/var/www/example.com/public_html/Data-Science-All/EDA.r')
# ggplot2 comes default
library(ggplot2)
# install RColorBrewer
library(RColorBrewer)
# load economics data
data(diamonds)
# Scatter plot of population versus unemploy
ggplot(data = diamonds)
# ggplot2 comes default
library(ggplot2)
# install RColorBrewer
library(RColorBrewer)
# load economics data
data(diamonds)
# Scatter plot of population versus unemploy
ggplot(data = diamonds)
# Scatter plot of population versus unemploy
ggplot(data = diamonds, x = carat, y = price)
# Scatter plot of population versus unemploy
ggplot(diamonds, x = carat, y = price)
ggplot(diamonds, aes(x=carat, y=price)) + geom_point()
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) + scale_color_brewer(palette = 'Accent')
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price)) + scale_color_brewer(palette = 'Accent')
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = clarity)) + scale_color_brewer(palette = 'Accent')
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = clarity)) + scale_color_brewer(palette = 'Accent')
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = clarity)) + geom_point()
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut())) + geom_point()
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + geom_point()
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = clarity)) + geom_point()
ut
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + geom_point()
View(diamonds)
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) + geom_point()
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + scale_color_brewer(palette = 'Accent')
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + scale_color_brewer()
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + scale_color_brewer(palette = "Accent")
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + scale_color_brewer(palette = "RdY1Gn")
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + scale_colour_brewer(palette = "Accent")
# Scatter plot of population versus unemploy
ggplot(diamonds, aes(x = carat, y = price, color = cut)) + scale_colour_brewer(palette = "RdYlGn")
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) + geom_point() + scale_color_brewer(palette = 'Accent')
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) + geom_point() + scale_color_brewer(palette = 'RdY1Gn')
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
palette = 'RdYlGn'
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = carat, y = price, color = cut)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
data("economics")
View(economics)
# Scatter plot of population versus unemploy
ggplot(data = diamonds, aes(x = pce, y = pop, color = uempmed)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(economics, aes(x = pce, y = pop, color = uempmed)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(economics, aes(x = pce, y = pop)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(economics, aes(x = pce, y = pop, color = data)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(economics, aes(x = pce, y = pop, color = data)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
View(presidential)
data("midwest")
View(midwest)
# Scatter plot of population versus unemploy
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = category)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(midwest, aes(x = poppovertyknown, y = poptotal, color = category)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point() + scale_color_brewer(palette = 'RdYlGn')
# Scatter plot of population versus unemploy
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point() + scale_color_brewer(palette = 'Accent')
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=4) + scale_color_brewer(palette = 'Accent')
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=4) + scale_color_brewer(palette = 'Accent',breaks = 1:2)
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=4) + scale_color_brewer(palette = 'Accent',breaks = 1:5)
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=4) + scale_color_brewer(palette = 'Accent',breaks = 5:10)
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=4) + scale_color_brewer(palette = 'Accent')
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=2) + scale_color_brewer(palette = 'Accent')
# Scatter plot of total population versus known poverty population
ggplot(midwest, aes(x = poptotal, y = poppovertyknown, color = state)) + geom_point(size=5) + scale_color_brewer(palette = 'Accent')
setwd("/var/www/example.com/public_html/Data-Science-All")
library(gridExtra)
save.image("/var/www/example.com/public_html/Data-Science-All/workspace.RData")
library(gridExtra)
pf <- read.delim('pseudo_facebook.tsv') # read.delim() function defaults to the tab character as the separator between values and the period as the decimal character.
qplot(x = friend_count, data = pf)
library(ggplot2)
qplot(x = friend_count, data = pf)
summary(pf$friend_count)
summary(log10(pf$friend_count))
# scale_x_log10() to adjust the x-axis
col1 <- qplot(x = friend_count, data = pf)
qplot(x = friend_count, data = pf)
qplot(x = log10(pf$friend_count + 1), data = pf)
qplot(x = sqrt(pf$friend_count))
grid.arrange(col1, col2, col3, ncol = 1)
grid.arrange(plot1, plot2, plot3, ncol = 1)
grid.arrange(plot1, plot2, plot3, ncol = 1)
# scale_x_log10() to adjust the x-axis
plot1 <- qplot(x = friend_count, data = pf)
library(gridExtra)
grid.arrange(plot1, plot2, plot3, ncol = 1)
grid.arrange(plot1, plot2, plot3, ncol = 1)
grid.arrange(plot2, plot3, ncol = 1)
grid.arrange(plot1, plot2, plot3, ncol = 1)
plot2 <- qplot(x = log10(friend_count + 1), data = pf)
plot3 <- qplot(x = sqrt(friend_count), data = pf)
grid.arrange(plot1, plot2, plot3, ncol = 1)
plot4 <- ggplot(aes(x = friend_count), data = pf) +
geom_histogram()
plot5 <- plot1 <- ggplot(aes(x = friend_count), data = pf) +
geom_histogram() + scale_x_log10()
plot6 <- plot1 <- ggplot(aes(x = friend_count), data = pf) +
geom_histogram() + scale_x_sqrt()
grid.arrange(plot4, plot5, plot6, ncol = 1)
grid.arrange(plot1, plot2, plot3, ncol = 1)
grid.arrange(plot4, plot5, plot6, ncol = 1)
logScale <- qplot(x = log10(friend_count), data = pf)
countScale <- ggplot(aes(x = friend_count), data = pf) +
geom_histogram() +
scale_x_log10()
grid.arrange(logScale, countScale, ncol = 2)
save.image("/var/www/example.com/public_html/Data-Science-All/workspace.RData")
